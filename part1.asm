.MODEL small
.DATA

;CADENAS PARA MOSTRAR EN LA PANTALLA
msgPar DB 'El numero es par$'
msgImpar DB 'El numero es impar$'
msgIngrese DB 'Ingrese un numero$'

;VARIABLE PARA GURADAR LO QUE INGRESE EL USUARIO
inpNumber DB ? 
residuo DB ? ,'$'
.STACK

.CODE

;INICIO DEL PROGRAMA
PROGRAMA:

MOV AX,@DATA
MOV DS,AX

;IMPRIME EL MENSAJE msgIngrese 
MOV DX,OFFSET msgIngrese
MOV AH,09H
INT 21H

;GUARDA EL DATO INGRESADO EN UN REGISTRO
XOR AX,AX
MOV AH,01H
INT 21H
MOV inpNumber,AL

;RESTA DE LO INGRESADO PARA QUE LO INGRESADO SEA LO CORRECTO
SUB inpNumber,30H

;IMPRIME EL DATO OBTENIDO POR LA RESTA
;ADD inpNumber,30H

;MOV DX,OFFSET inpNumber
;MOV AH,09H
;INT 21H

;HACE UNA DIVISION
XOR AX,AX
MOV AL,inpNumber
MOV CL, 02H
DIV CL

;MUEVE EL RESIDUO QUE ESTA EN AH A RESIDUO
MOV residuo,AH

;COMPARA SI EL RESIDUO ES 0

CMP RESIDUO,0
JZ ESPAR

;IMPRIME SI ES IMPAR
ESIMPAR:
    MOV DX,OFFSET msgImpar
    MOV AH,09H
    INT 21H
    JMP TERMINAR

;IMPRIME SI ES PAR
ESPAR:
   
    MOV DX,OFFSET msgPar
    MOV AH,09H
    INT 21H
    JMP TERMINAR

;TERMINA EL PROGRAM
TERMINAR:
    MOV AH,4CH
    INT 21H

END PROGRAMA